  services:
    core:
      build:
        dockerfile: Dockerfile
      env_file:
        - .env.docker
      ports:
        - "8001:8001"
      depends_on:
        - redis
        - postgres
      volumes:
        - .:/app

    pgadmin:
     image: dpage/pgadmin4
     container_name: pgadmin
     restart: always
     ports:
      - "5050:80"
     env_file:
      - .env.docker
     depends_on:
      - postgres
     volumes:
      - pgadmin_data:/var/lib/pgadmin



    # Elasticsearch service
  #  elasticsearch:
  #    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
  #    container_name: elasticsearch
  #    ports:
  #      - "9200:9200"
  #      - "9300:9300"
  #    volumes:
  #      - elasticsearch_data:/usr/share/elasticsearch/data
  #    healthcheck:
  #      test: [ "CMD-SHELL", "curl -s http://localhost:9200 | grep -q 'You Know, for Search'" ]
  #      interval: 30s
  #      retries: 3
  #
  #  # Kibana service for monitoring Elasticsearch data
  #  kibana:
  #    image: docker.elastic.co/kibana/kibana:7.17.3
  #    container_name: kibana
  #    ports:
  #      - "5601:5601"
  #    depends_on:
  #      - elasticsearch
  #    environment:
  #      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

    # Redis service
    redis:
     image: redis:7.0  # Use Redis 7.x or later
     container_name: redis
     ports:
      - "6379:6379"
     volumes:
      - redis_data:/data


 # postgres service (postgresSql)
    postgres:
      image: postgres:14
      container_name: postgres
      restart: always
      ports:
        - "5435:5432"
      env_file:
        - .env.docker
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U dev_user -h postgres -p 5432" ]
        interval: 10s
        retries: 5
        start_period: 10s

  volumes:
#    elasticsearch_data:
    redis_data:
    pgadmin_data:
    postgres_data: